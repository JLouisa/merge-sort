/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),i=t.n(r),o=t(645),A=t.n(o)()(i());A.push([n.id,':root {\n  font-family: monospace, "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n}\n\n#sortBtn,\n.divSortedList {\n  visibility: hidden;\n}\n\n.nav {\n  height: 10%;\n  border-bottom: 2px solid gray;\n}\n\nh1 {\n  text-align: center;\n  color: gray;\n}\n\n.main {\n  height: 80%;\n  display: grid;\n  grid-template: 1fr 5fr 1fr / 1fr 5fr 1fr;\n  justify-content: center;\n  align-items: center;\n  align-items: stretch;\n  min-height: 80vh;\n}\n\n.leftside,\n.rightside {\n  width: 100%;\n  height: 100%;\n  flex: 1;\n}\n.midside {\n  background-color: rgba(211, 211, 211, 0.065);\n\n  grid-area: 1/2/4/3;\n  align-self: center;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n  box-shadow: 1px 1px 5px 4px solid rgb(0, 0, 0);\n  padding: 2em;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.ranges,\n.divUnSortedList {\n  text-align: center;\n}\n\n.ranges > input {\n  margin-top: 1rem;\n  margin-left: 0.1em;\n  margin-right: 1em;\n}\n\n.formBtns,\n.divSortBtn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n}\n\n.midBot {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n#sortBtn {\n  margin: 2rem;\n}\n\n.leftside {\n  grid-area: 1/1/4/2;\n}\n.rightside {\n  grid-area: 1/3/4/4;\n}\n\n.footer {\n  border-top: 2px solid gray;\n  height: 5em;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.styleBtn1,\n.styleBtn2 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  margin: 0.6em;\n  outline: none;\n  background-color: initial;\n  background-image: linear-gradient(-180deg, gray, gray);\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 2px 4px;\n  color: #ffffff;\n  font-family: Inter, -apple-system, system-ui, Roboto, "Helvetica Neue", Arial, sans-serif;\n  height: 2em;\n  line-height: 2emx;\n  outline: 0;\n  padding: 1em 2em;\n  vertical-align: top;\n  white-space: nowrap;\n  border: 0;\n  transition: box-shadow 0.2s;\n}\n\n.styleBtn1:hover,\n.styleBtn2:hover {\n  background-color: lightgrey;\n  transform: scale(1.1);\n}\n\n.styleBtn1:active,\n.styleBtn2:active {\n  transform: scale(0.9);\n}\n\n.divAmount {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.divAmount > input {\n  margin-left: 1em;\n}\n\n.divUnSortedList,\n.divSortedList {\n  margin-bottom: 1em;\n}\n\n.unSortedList,\n.sortedList {\n  display: flex;\n  word-break: break-all;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  font-size: 2rem;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,uEAAuE;AACzE;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,WAAW;EACX,aAAa;EACb,wCAAwC;EACxC,uBAAuB;EACvB,mBAAmB;EACnB,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,OAAO;AACT;AACA;EACE,4CAA4C;;EAE5C,kBAAkB;EAClB,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,8CAA8C;EAC9C,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,0BAA0B;EAC1B,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,aAAa;EACb,aAAa;EACb,yBAAyB;EACzB,sDAAsD;EACtD,kBAAkB;EAClB,wCAAwC;EACxC,cAAc;EACd,yFAAyF;EACzF,WAAW;EACX,iBAAiB;EACjB,UAAU;EACV,gBAAgB;EAChB,mBAAmB;EACnB,mBAAmB;EACnB,SAAS;EACT,2BAA2B;AAC7B;;AAEA;;EAEE,2BAA2B;EAC3B,qBAAqB;AACvB;;AAEA;;EAEE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;;EAEE,aAAa;EACb,qBAAqB;EACrB,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB",sourcesContent:[':root {\n  font-family: monospace, "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n}\n\n#sortBtn,\n.divSortedList {\n  visibility: hidden;\n}\n\n.nav {\n  height: 10%;\n  border-bottom: 2px solid gray;\n}\n\nh1 {\n  text-align: center;\n  color: gray;\n}\n\n.main {\n  height: 80%;\n  display: grid;\n  grid-template: 1fr 5fr 1fr / 1fr 5fr 1fr;\n  justify-content: center;\n  align-items: center;\n  align-items: stretch;\n  min-height: 80vh;\n}\n\n.leftside,\n.rightside {\n  width: 100%;\n  height: 100%;\n  flex: 1;\n}\n.midside {\n  background-color: rgba(211, 211, 211, 0.065);\n\n  grid-area: 1/2/4/3;\n  align-self: center;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n  box-shadow: 1px 1px 5px 4px solid rgb(0, 0, 0);\n  padding: 2em;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.ranges,\n.divUnSortedList {\n  text-align: center;\n}\n\n.ranges > input {\n  margin-top: 1rem;\n  margin-left: 0.1em;\n  margin-right: 1em;\n}\n\n.formBtns,\n.divSortBtn {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n}\n\n.midBot {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n#sortBtn {\n  margin: 2rem;\n}\n\n.leftside {\n  grid-area: 1/1/4/2;\n}\n.rightside {\n  grid-area: 1/3/4/4;\n}\n\n.footer {\n  border-top: 2px solid gray;\n  height: 5em;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.styleBtn1,\n.styleBtn2 {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  margin: 0.6em;\n  outline: none;\n  background-color: initial;\n  background-image: linear-gradient(-180deg, gray, gray);\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 2px 4px;\n  color: #ffffff;\n  font-family: Inter, -apple-system, system-ui, Roboto, "Helvetica Neue", Arial, sans-serif;\n  height: 2em;\n  line-height: 2emx;\n  outline: 0;\n  padding: 1em 2em;\n  vertical-align: top;\n  white-space: nowrap;\n  border: 0;\n  transition: box-shadow 0.2s;\n}\n\n.styleBtn1:hover,\n.styleBtn2:hover {\n  background-color: lightgrey;\n  transform: scale(1.1);\n}\n\n.styleBtn1:active,\n.styleBtn2:active {\n  transform: scale(0.9);\n}\n\n.divAmount {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.divAmount > input {\n  margin-left: 1em;\n}\n\n.divUnSortedList,\n.divSortedList {\n  margin-bottom: 1em;\n}\n\n.unSortedList,\n.sortedList {\n  display: flex;\n  word-break: break-all;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  font-size: 2rem;\n}\n'],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&A[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},A=[],a=0;a<n.length;a++){var s=n[a],l=r.base?s[0]+r.base:s[0],c=o[l]||0,d="".concat(l," ").concat(c);o[l]=c+1;var u=t(d),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var f=i(m,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:f,references:1})}A.push(d)}return A}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var A=0;A<o.length;A++){var a=t(o[A]);e[a].references--}for(var s=r(n,i),l=0;l<o.length;l++){var c=t(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var r={};(()=>{t.d(r,{s:()=>g});var n=t(379),e=t.n(n),i=t(795),o=t.n(i),A=t(569),a=t.n(A),s=t(565),l=t.n(s),c=t(216),d=t.n(c),u=t(589),m=t.n(u),f=t(28),B={};B.styleTagTransform=m(),B.setAttributes=l(),B.insert=a().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=d(),e()(f.Z,B),f.Z&&f.Z.locals&&f.Z.locals;let g=[];(()=>{let n,e,t,r=[];const i=document.querySelector("form"),o=document.getElementById("minRange"),A=document.getElementById("maxRange"),a=document.getElementById("amount"),s=document.querySelector(".unSortedList"),l=document.querySelector(".sortedList"),c=document.querySelector(".divSortedList"),d=document.getElementById("okBtn"),u=document.getElementById("cancelBtn"),m=document.getElementById("sortBtn");function f(n,e){return n=Math.ceil(n),e=Math.floor(e),Math.floor(Math.random()*(e-n+1))+n}function B(){s.textContent=r}function p(){l.textContent=g}function E(n){switch(n){case 0:m.removeAttribute("style"),m.style.visibility="hidden",c.style.visibility="hidden";case 1:m.style.visibility="visible",l.style.visibility="visible",c.style.visibility="visible"}}d.addEventListener("click",(()=>{event.preventDefault(),r=[],g=[],n=o.value,e=A.value,e<n&&(e=n+1),t=a.value,function(n,e,t){let i=0;for(;i<n;){let n=f(e,t);g.includes(n)||(g.push(n),i++)}r=[],r=[...g]}(t,n,e),B(),E(1),i.reset()})),u.addEventListener("click",(()=>{i.reset()})),m.addEventListener("click",(()=>{i.reset(),(n=>{const e=n.length-1;g=function n(e,t,r){if(t===r)return;const i=Number(Math.floor((t+r)/2));return n(e,t,i),n(e,i+1,r),function(n,e,t,r){const i=[...n],o=[],A=[];for(let n=e;n<=r;n+=1)o.push(i[n]);for(let n=r+1;n<=t;n+=1)A.push(i[n]);let a=0,s=0,l=e;for(;a<o.length&&s<A.length;)o[a]<A[s]?(n[l]=o[a],a+=1):(n[l]=A[s],s+=1),l+=1;for(;a<o.length;)n[l]=o[a],a+=1,l+=1;for(;s<A.length;)n[l]=A[s],s+=1,l+=1}(e,t,r,i),e}(n,0,e),console.log(g)})(g),B(),p(),E(0),p(),m.style.visibility="hidden"}))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,